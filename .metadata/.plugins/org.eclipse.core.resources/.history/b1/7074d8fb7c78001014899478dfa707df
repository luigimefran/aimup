package com.aimup.controller;

import com.aimup.model.Usuario;
import com.aimup.service.UsuarioService;
import jakarta.validation.Valid;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@Controller
public class AuthController {

    private final UsuarioService usuarioService;

    public AuthController(UsuarioService usuarioService) {
        this.usuarioService = usuarioService;
    }

    // Garante que SEMPRE exista "usuario" no modelo para as views de cadastro
    @ModelAttribute("usuario")
    public Usuario usuarioModel() {
        return new Usuario();
    }

    // Página de login (GET)
    @GetMapping("/login")
    public String login() {
        return "login/login";
    }

    // Página de cadastro (GET)
    @GetMapping({"/cadastro", "/cadastro/"})
    public String cadastroForm() {
        return "cadastro/cadastro";
    }

    // Cadastro (POST)
    @PostMapping("/cadastro")
    public String cadastrar(@ModelAttribute("usuario") @Valid Usuario usuario,
                            BindingResult result,
                            Model model) {

        if (result.hasErrors()) {
            return "cadastro/cadastro";
        }

        if (usuarioService.emailExistente(usuario.getEmail())) {
            model.addAttribute("erro", "Já existe usuário com esse e-mail.");
            return "cadastro/cadastro";
        }

        try {
            usuarioService.salvarUsuario(usuario); // faz BCrypt lá no service
        } catch (IllegalArgumentException e) {
            model.addAttribute("erro", e.getMessage());
            return "cadastro/cadastro";
        }

        return "redirect:/login?registered";
    }
}
